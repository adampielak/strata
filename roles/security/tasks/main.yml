---
# Set up ssl to secure apache and phpldapadmin
- name: Install requirements
  pip:
    name: '{{ item }}'
  with_items:
    - pyopenssl
    - passlib

- name: Create ssl directory
  file:
    path: /etc/apache2/ssl
    state: directory
  register: apache_ssl_directory

- name: Generate ssl private key
  openssl_privatekey:
    path: '{{ apache_ssl_directory.path }}/apache.pem'
  register: apache_ssl_key

- name: Generate ssl Certificate Signing Request (CSR)
  openssl_csr:
    path: '{{ apache_ssl_directory.path }}/apache.csr'
    privatekey_path: '{{ apache_ssl_key.filename }}'
    common_name: '{{ domain_name }}'
  register: apache_ssl_csr

- name: Generate ssl certificate
  openssl_certificate:
    path: '{{ apache_ssl_directory.path }}/apache.crt'
    privatekey_path: '{{ apache_ssl_key.filename }}'
    csr_path: '{{ apache_ssl_csr.filename }}'
    provider: selfsigned
  register: apache_ssl_cert

- name: Create password auth file to password protect our phpLDAPadmin location
  htpasswd:
    path: /etc/apache2/htpasswd
    name: '{{ htpasswd_user }}'
    password: '{{ htpasswd_pass }}'

- name: Enable SSL module in Apache
  apache2_module:
    name: ssl

- name: Modify the phpLDAPadmin apache configuration
  lineinfile:
    path: /etc/phpldapadmin/apache.conf
    regexp: Alias
    line: 'Alias {{ phpldapadmin_url }} /usr/share/phpldapadmin/htdocs'

- name: Configure HTTP virtual host
  template:
    src: 000-default.conf.j2
    dest: /etc/apache2/sites-enabled/000-default.conf

- name: Configure the HTTPS Virtual Host File
  template:
    src: default-ssl.conf.j2
    dest: /etc/apache2/sites-available/default-ssl.conf

- name: Enable the HTTPS Virtual Host File
  command: a2ensite default-ssl.conf
  notify: restart apache2

### Setup to encrypt openldap connections
- name: Set the hostname in all of the relevant places on your server
  hostname:
    name: '{{ hostname }}'

- name: Ensure /etc/hosts has the FQDN of our server
  lineinfile:
    path: /etc/hosts
    line: '127.0.1.1 {{ hostname }}.{{ domain_name }} {{ hostname }}'

- name: Install packages to encrypt our connection
  apt:
    name: '{{ item }}'
    update_cache: yes
  with_items:
    - gnutls-bin
    - ssl-cert

- name: Make directory to store template files
  file:
    path: /etc/ssl/templates
    state: directory
  register: ldap_ssl_directory

- name: Set fact for templates directory
  set_fact:
    ssl_template_dir: '{{ ldap_ssl_directory.path }}'

- name: Create the template for certificate authority
  blockinfile:
    path: '{{ ssl_template_dir }}/ca_server.conf'
    create: yes
    block: |
      cn = LDAP Server CA
      ca
      cert_signing_key

- name: Create the LDAP service template
  blockinfile:
    path: '{{ ssl_template_dir }}/ldap_server.conf'
    create: yes
    block: |
      organization = "{{ organization_name | title }}"
      cn = ldap.{{ domain_name }}
      tls_www_server
      encryption_key
      signing_key
      expiration_days = 3652

- name: Set facts for ssl directories
  set_fact:
    ssl_private_dir: /etc/ssl/private
    ssl_certs_dir: /etc/ssl/certs

- name: Generate CA key
  command: certtool -p --outfile {{ ssl_private_dir }}/ca_server.key

- name: Generate CA certificate
  command: certtool -s --load-privkey {{ ssl_private_dir }}/ca_server.key \
          --template {{ ssl_template_dir }}/ca_server.conf \
          --outfile {{ ssl_certs_dir }}/ca_server.pem

- name: Generate private key for LDAP server
  command: certtool -p --sec-param high --outfile {{ ssl_private_dir }}/ldap_server.key

- name: Put the certificate in /etc/ssl/certs
  command: certtool -c --load-privkey {{ ssl_private_dir }}/ldap_server.key \
          --load-ca-certificate {{ ssl_certs_dir }}/ca_server.pem \
          --load-ca-privkey {{ ssl_private_dir }}/ca_server.key \
          --template {{ ssl_template_dir }}/ldap_server.conf \
          --outfile {{ ssl_certs_dir }}/ldap_server.pem

- name: Add openldap user to ssl-cert group
  user:
    name: openldap
    group: ssl-cert
  notify: restart openldap

- name: Give ssl-cert group ownership over ldap_server.key file
  file:
    path: '{{ ssl_private_dir }}/ldap_server.key'
    group: ssl-cert
    mode: 640

- name: Configure OpenLDAP to use the certificate and keys
  template:
    src: addcerts.ldif.j2
    dest: '{{ ansible_env.HOME }}/addcerts.ldif'
  register: addcerts

####  It breaks at this point. ***** ****
- name: Apply the changes to OpenLDAP system
  command: ldapmodify -H ldapi:/// -Y EXTERNAL -f {{ addcerts.path|default(addcerts.dest) }}
  notify: restart openldap

- name: Copy the CA certificate
  copy:
    src: '{{ ssl_certs_dir }}/ca_server.pem'
    dest: /etc/ldap/ca_certs.pem
    remote_src: yes
  register: ldap_ca_cert

- name: Adjust the value of TLS_CACERT option to point to the new CA certificate
  lineinfile:
    path: '{{ /etc/ldap/ldap.conf }}'
    regexp: '^TLS_CACERT'
    line: TLS_CACERT {{ ldap_ca_cert }}
